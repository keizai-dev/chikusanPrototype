<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:JaGunma.Chikusan.Style"
                    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    
    <!-- 全コントロールのデフォルトフォントサイズ -->
    <sys:Double x:Key="AllFontSize">14.67</sys:Double>
    <FontFamily x:Key="AllFontFamily">Meiryo UI</FontFamily>

    <!--<FontFamily x:Key="AllFontFamily">Yu Gothic UI</FontFamily>-->

    <!--色共通-->
    <SolidColorBrush x:Key="AccentBrush" Color="#FF5252" />
    <SolidColorBrush x:Key="AccentLightBrush" Color="#FF8A80" />
    <SolidColorBrush x:Key="AccentDarkBrush" Color="#C50E29" />
    <SolidColorBrush x:Key="PrimaryBrush" Color="#BDBDBD" />
    <SolidColorBrush x:Key="PrimaryDarkBrush" Color="#8D8D8D" />
    <SolidColorBrush x:Key="PrimaryLightBrush" Color="#EFEFEF" />
    <SolidColorBrush x:Key="InfoBrush" Color="#2196F3" />
    <SolidColorBrush x:Key="GrayBrush" Color="#9E9E9E" />
    <SolidColorBrush x:Key="DarkGrayBrush" Color="#616161" />
    <SolidColorBrush x:Key="LightGrayBrush" Color="#E0E0E0" />
    <SolidColorBrush x:Key="WhiteBrush" Color="#FFF" />
    <SolidColorBrush x:Key="BlackBrush" Color="#000" />
    <SolidColorBrush x:Key="ErrorBrush" Color="#d50000" />
    <SolidColorBrush x:Key="WarningBrush" Color="#ff6d00" />
    <SolidColorBrush x:Key="SuccessBrush" Color="#66BB6A" />
    <!--UserControl(効かない_たぶんUserControlが先に描写されている)-->
    <!--<Style TargetType="DockPanel">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Width" Value="1366"></Setter>
        <Setter Property="Height" Value="700"></Setter>
    </Style>-->

    <!--フォーカス時のスタイル-->
    <Style x:Key="ButtonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="-1,-1,-1,0"
                               StrokeThickness="1"
                               RadiusX="1"
                               RadiusY="1"
                               Stroke="{StaticResource InfoBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle  Margin="0,0,0,0"
                               StrokeThickness="1"
                               RadiusX="1"
                               RadiusY="1"
                               Stroke="{StaticResource InfoBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window -->
    <Style x:Key="WindowBase" TargetType="Window" BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Width" Value="1366"/>
        <Setter Property="Height" Value="768"/>
        <Setter Property="Title" Value="畜産システム"/>
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
    </Style>
    
    <!-- UserControl -->
    <Style x:Key="UserControlBase" TargetType="UserControl" BasedOn="{StaticResource {x:Type UserControl}}">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Width" Value="1366"/>
        <Setter Property="Height" Value="768"/>
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl}">
                    <Viewbox Margin="0" Stretch="Fill">
                        <ContentPresenter/>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>
    
    <!-- TextBox -->
    <Style x:Key="TextBoxBase" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Style.Triggers>
            <Trigger Property="IsFocused"  Value="True">
                <!--<Setter Property="Storyboard.Name" Value="{StaticResource TextBoxAnimation}" />-->
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Background" Value="{StaticResource LightGrayBrush}"/>
                <Setter Property="Opacity" Value="0.9"/>
                <Setter Property="TextBox.Effect" >
                    <Setter.Value>
                        <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="1" Opacity="0.1" Direction="270"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Height" Value="25px"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TextFocusVisualStyle}"/>
        <Setter Property="IsReadOnly" Value="false"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="TextBox.Effect" >
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="8" ShadowDepth="1" Opacity="0.1" Direction="270"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ReadOnlyTextBox -->
    <!--<Style x:Key="ReadOnlyTextBox" TargetType="TextBox" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="Background" Value="{StaticResource LightGrayBrush}"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="TextBox.Effect" >
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="1" Opacity="0.1" Direction="270"/>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- PlaceHolderTextBox -->
    <Style x:Key="PlaceHolderTextBox" TargetType="TextBox" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <TextBox Text="{Binding Path=Text,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" />
                        <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Foreground" Value="Transparent"/>
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource TextFocusVisualStyle}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
                                            <!--<Setter Property="Opacity" Value="0.5"/>-->
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style x:Key="ButtonBase" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Height" Value="30px"/>
        <Setter Property="Width" Value="150px"/>
        <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Foreground" Value="#FAFAFA"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2" Opacity="0.2" Direction="270"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}" >
                        <TextBlock Text="{TemplateBinding Content}"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <!--<ContentPresenter></ContentPresenter>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource AccentLightBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" BlurRadius="0" ShadowDepth="0" Opacity="0" Direction="270"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource AccentLightBrush}"/>
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- クリアButton -->
    <Style x:Key="ClearButton" TargetType="Button" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource InfoBrush}"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Content" Value="クリア"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource InfoBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
            </Trigger>
            <!--<Trigger Property="IsPressed" Value="true">
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" BlurRadius="0" ShadowDepth="0" Opacity="0" Direction="270"/>
                    </Setter.Value>
                </Setter>
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <!-- 閉じるButton -->
    <Style x:Key="CloseButton" TargetType="Button" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource DarkGrayBrush}"/>
        <Setter Property="Content" Value="閉じる"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource GrayBrush}"/>
            </Trigger>
            <!--<Trigger Property="IsPressed" Value="true">
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" BlurRadius="0" ShadowDepth="0" Opacity="0" Direction="270"/>
                    </Setter.Value>
                </Setter>
            </Trigger>-->
        </Style.Triggers>
    </Style>
    
    <!-- 検索Button -->
    <Style x:Key="RightDockSearchButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Width" Value="25"></Setter>
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2" Opacity="0.2" Direction="270"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="0,3,3,0" BorderThickness="1" BorderBrush="{StaticResource GrayBrush}">
                        <StackPanel Name="panel" Orientation="Horizontal" Background="{StaticResource GrayBrush}">
                            <Image Source="../Resources/SearchIcon.png" RenderOptions.BitmapScalingMode="HighQuality" Opacity="0.8"/>
                        </StackPanel>
                    </Border>
                    <!--<ControlTemplate.Triggers>効かない。。。
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource InfoBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource InfoBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" BlurRadius="0" ShadowDepth="0" Opacity="0" Direction="270"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- TextBlock -->
    <Style x:Key="TextBlockBase" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <!-- メッセージ領域 -->
    <Style x:Key="ErrorMessageRegion" TargetType="Border">
        <!--<Setter Property="Background" Value="#FF8A80"/>-->
        <Setter Property="Background" Value="{StaticResource ErrorBrush}"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Style.Triggers>
            <!--<DataTrigger Binding="{Binding Text,ElementName=HimmeiCodeStartTextBox}" Value="1">-->
            <DataTrigger Binding="{Binding Text,ElementName=ErrorMessageTextBlock}" Value="">
                <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Label -->
    <Style x:Key="LabelBase" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <!--<Setter Property="HorizontalAlignment" Value="Center"/>-->
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
    </Style>


    <!-- 必須Label -->
    <Style x:Key="RequiredLabel" TargetType="Label" BasedOn="{StaticResource LabelBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" >
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{TemplateBinding Content}"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <!--<Border CornerRadius="3" Background="{StaticResource AccentDarkBrush}" Margin="10,0,0,0">
                                <TextBlock Text="必須" Foreground="{StaticResource WhiteBrush}" Margin="2,1,2,1" FontSize="9pt" FontFamily="{DynamicResource AllFontFamily}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            </Border>-->
                            <TextBlock Text="*" Foreground="{StaticResource AccentBrush}" Margin="1"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox-->
    <Style x:Key="CheckBoxBase" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Grid x:Name="EnableTrue" Width="15" Height="15">
                                    <Rectangle x:Name="CheckNull" Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="#FAFAFA" Stroke="{StaticResource GrayBrush}" StrokeThickness="0.5"/>
                                    <Rectangle x:Name="CheckRect" Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="White" Stroke="{StaticResource GrayBrush}" StrokeThickness="0.5"/>
                                    <Path x:Name="CheckMark" IsHitTestVisible="False" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 3 5 L 5 8 L 13 0" Stroke="#2196F3"/>
                                </Grid>
                                <Grid x:Name="EnableFalse" Width="15">
                                    <Rectangle Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{StaticResource DarkGrayBrush}" Stroke="{StaticResource GrayBrush}" StrokeThickness="0.5" StrokeDashArray="1,3"/>
                                </Grid>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <BulletDecorator.Child>
                            <ContentPresenter/>
                        </BulletDecorator.Child>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Visible" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 停止中CheckBox-->
    <Style x:Key="StopCheckBox" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Grid x:Name="EnableTrue" Width="18" Height="15">
                                    <Rectangle x:Name="CheckNull" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{StaticResource AccentDarkBrush}" Stroke="{StaticResource AccentDarkBrush}" StrokeThickness="2"/>
                                    <Rectangle x:Name="CheckRect" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{StaticResource AccentDarkBrush}" Stroke="{StaticResource WhiteBrush}" StrokeThickness="2"/>
                                    <Path x:Name="CheckMark" IsHitTestVisible="False" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 3 5 L 5 8 L 13 0" Stroke="{StaticResource WhiteBrush}"/>
                                </Grid>
                                <Grid x:Name="EnableFalse" Width="18">
                                    <Rectangle Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{StaticResource WhiteBrush}" Stroke="{StaticResource WhiteBrush}" StrokeThickness="2" StrokeDashArray="1,3"/>
                                </Grid>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <BulletDecorator.Child>
                            <ContentPresenter/>
                        </BulletDecorator.Child>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Visible" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 通常CheckBox-->
    <Style x:Key="SuccessCheckBox" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        <Setter Property="Content" Value="停止中"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Grid x:Name="EnableTrue" Width="18" Height="15">
                                    <Rectangle x:Name="CheckNull" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{StaticResource SuccessBrush}" Stroke="{StaticResource SuccessBrush}" StrokeThickness="2"/>
                                    <Rectangle x:Name="CheckRect" Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{StaticResource SuccessBrush}" Stroke="{StaticResource WhiteBrush}" StrokeThickness="2"/>
                                    <Path x:Name="CheckMark" IsHitTestVisible="False" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 3 5 L 5 8 L 13 0" Stroke="{StaticResource WhiteBrush}"/>
                                </Grid>
                                <Grid x:Name="EnableFalse" Width="18">
                                    <Rectangle Width="13" Height="13" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{StaticResource WhiteBrush}" Stroke="{StaticResource WhiteBrush}" StrokeThickness="2" StrokeDashArray="1,3"/>
                                </Grid>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <BulletDecorator.Child>
                            <ContentPresenter/>
                        </BulletDecorator.Child>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Visible" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Grid ItemGroupArea-->
    <Style x:Key="ItemGroupAreaGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
    </Style>
    
    <!--Grid ItemGroupRow-->
    <Style x:Key="ItemGroupRowGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource LightGrayBrush}"/>
        <!--<Setter Property="Background" Value="{StaticResource PrimaryLightBrush}"/>-->
    </Style>

    <!--Grid ItemGroupRow-->
    <Style x:Key="ItemGroupAreaGroupBox" TargetType="GroupBox">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
    </Style>

    <!--修正モードグリッド-->
    <Style TargetType="{x:Type Grid}" x:Key="UpdateVisibleGrid">
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsUpdateMode,Mode=TwoWay}" Value="true">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!---コントロールウィンドウ-->
    <Style x:Key="ControlWindow" TargetType="Window">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
    </Style>

    <!---ローディングぼーだスタイル-->
    <Style x:Key="LoadingBorder" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoading,Mode=TwoWay}" Value="true">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!---画像-->
    <Style x:Key="ImageBase" TargetType="Image">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
    </Style>
    
    <!--画像リソース-->
    <BitmapImage x:Key="PeopleIcon" UriSource="../Resources/PeopleIcon.png" />
    <BitmapImage x:Key="MenuIcon" UriSource="../Resources/MenuIcon.png" />
    <BitmapImage x:Key="ExitIcon" UriSource="../Resources/ExitIcon.png" />
    <BitmapImage x:Key="HomeIcon" UriSource="../Resources/HomeIcon.png" />
    <BitmapImage x:Key="StopIcon" UriSource="../Resources/WarningIcon.png" />
    <BitmapImage x:Key="LockIcon" UriSource="../Resources/LockIcon.png" />
    <BitmapImage x:Key="LockOpenIcon" UriSource="../Resources/LockOpenIcon.png" />
    <BitmapImage x:Key="InfoIcon" UriSource="../Resources/InfoIcon.png" />
    <BitmapImage x:Key="QuestionIcon" UriSource="../Resources/QuestionIcon.png" />
    <BitmapImage x:Key="WarningIcon2" UriSource="../Resources/WarningIcon2.png" />
    <BitmapImage x:Key="ErrorIcon" UriSource="../Resources/ErrorIcon.png" />

    <!--=======================================================
        DataGrid用スタイル再定義 START
        ======================================================= -->
    <!-- Thumb(列ヘッダ幅変更マウスカーソル) Style設定 -->
    <Style x:Key="columnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridColumnHeader(列ヘッダ) Style設定 -->
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="SeparatorBrush" Value="{StaticResource LightGrayBrush}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <!-- マウスオーバで色が変わる設定 -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="columnHeaderBorder"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#efefef" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- ヘッダ の外観 -->
                        <Border x:Name="columnHeaderBorder"
                                BorderThickness="0 0 1 1"
                                Padding="3 0 3 0"
                                BorderBrush="{StaticResource PrimaryBrush}"
                                Background="#ffdddddd">

                            <Grid>
                                <!-- ソートマーク -->
                                <Path x:Name="sortArrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top"
                                      Width="8" Height="6" Margin="0 2 0 0"
                                      Stretch="Fill" Fill="DarkGray"
                                      RenderTransformOrigin="0.5 0.4"
                                      Visibility="Collapsed"
                                      Data="M0,0 L1,0 0.5,1 z" />
                                <!-- ヘッダ文字列 -->
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>

                        <!-- サイズ変更グリップ -->
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource columnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource columnHeaderGripperStyle}"/>
                    </Grid>

                    <!-- ソート trigger -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="sortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="sortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="sortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridCell(セル) Style設定 -->
    <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource InfoBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ScrollBar">
        <Setter Property="Background" Value="{StaticResource PrimaryLightBrush}"/>
    </Style>

    <!-- DataGrid Style設定 -->
    <Style TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="1 1 1 1"/>
        <Setter Property="ColumnHeaderHeight" Value="25"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource PrimaryBrush}"/>
        <!--<Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Standard"/>-->
        <Setter Property="IsReadOnly" Value="True"/>
        <!--パフォーマンス用問題があったらはずす-->
        <Setter Property="EnableColumnVirtualization" Value="true"/>
    </Style>

    <!-- その他はデフォルト継承 -->
    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}"/>
    <Style TargetType="DataGridRowHeader" BasedOn="{StaticResource {x:Type DataGridRowHeader}}" />
    
    <!---スクロール有データグリッド-->
    <Style x:Key="ScrollDataGrid" TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Visible"/>
    </Style>

    <!--=======================================================
        DataGrid用スタイル定義　END
        =======================================================-->


    <!--=======================================================
        ヘッダ用スタイル定義　START
        =======================================================-->
    <!-- ヘッダコントロールのデフォルトフォントサイズ -->
    <!--<sys:Double x:Key="HeaderFontSize">13.667</sys:Double>
    <FontFamily x:Key="HeaderFontFamily">Meiryo UI</FontFamily>-->

    <!-- TextBox -->
    <Style x:Key="HeaderTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Style.Triggers>
            <Trigger Property="IsFocused"  Value="True">
                <!--<Setter Property="Storyboard.Name" Value="{StaticResource TextBoxAnimation}" />-->
            </Trigger>
        </Style.Triggers>
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Height" Value="25px"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"></Setter>
        <Setter Property="TextBox.Effect" >
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="1" Opacity="0.2" Direction="270"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style x:Key="HeaderButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Height" Value="25px"/>
        <Setter Property="Width" Value="120px"/>
        <Setter Property="Background" Value="#FF5252"/>
        <Setter Property="Foreground" Value="#FAFAFA"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2" Opacity="0.2" Direction="270"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}" >
                        <TextBlock Text="{TemplateBinding Content}"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <!--<ContentPresenter></ContentPresenter>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource AccentLightBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" BlurRadius="0" ShadowDepth="0" Opacity="0" Direction="270"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBlock -->
    <Style x:Key="HeaderTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <!--<Setter Property="Foreground" Value="#ff5252"/>-->
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Slider つまみのデザイン -->
    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Slider}, Mode=FindAncestor}}" Width="15" Height="15"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2" Opacity="0.2" Direction="270"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Slider -->
    <Style x:Key="CustomSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Minimum" Value="11.67"/>
        <Setter Property="Maximum" Value="18.67"/>
        <Setter Property="SmallChange" Value="1"/>
        <Setter Property="LargeChange" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TickPlacement" Value="BottomRight"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <!-- 横置きの場合 -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="15" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <!-- 上の目盛り -->
                                <TickBar Grid.Row="0" x:Name="TopTick" Placement="Top" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Height="8" Opacity="0.8" Margin="0,0,0,2" />
                                <!-- 下の目盛り -->
                                <TickBar Grid.Row="2" x:Name="BottomTick" Placement="Bottom" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" TickFrequency="2" Height="8" Margin="0,2,0,0"/>
                                <Track Grid.Row="1" x:Name="PART_Track">
                                    <!-- 減少側のトラック（レール） -->
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="Slider.DecreaseLarge" Background="{TemplateBinding Foreground}" Height="3" BorderBrush="{x:Null}" Opacity="0.5"/>
                                    </Track.DecreaseRepeatButton>

                                    <!-- 増加側のトラック（レール） -->
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="Slider.IncreaseLarge" Background="{TemplateBinding Foreground}" Height="3" BorderBrush="{x:Null}"/>
                                    </Track.IncreaseRepeatButton>

                                    <!-- つまみ -->
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource SliderThumbStyle}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                            <!-- TickPlacement の設定によって目盛りの表示を切り替え -->
                            <ControlTemplate.Triggers>
                                <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="Slider.TickPlacement" Value="Both">
                                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- アカウントButton -->
    <!--<Style x:Key="AccontButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Width" Value="25"></Setter>
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2" Opacity="0.2" Direction="270"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="3,3,3,3" BorderThickness="1" BorderBrush="{StaticResource GrayBrush}">
                        <StackPanel Name="panel" Orientation="Horizontal" Background="{StaticResource GrayBrush}">
                            <Image Source="../Resources/PeopleIcon.png" RenderOptions.BitmapScalingMode="HighQuality" Opacity="1"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- メニューButton -->
    <Style x:Key="MenuButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="Width" Value="100"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="3,3,3,3" BorderThickness="1" BorderBrush="{StaticResource AccentBrush}">
                        <StackPanel Name="panel" Orientation="Horizontal" Background="{StaticResource AccentBrush}">
                            <Image Source="../Resources/HomeIcon.png" RenderOptions.BitmapScalingMode="HighQuality" Opacity="1"/>
                            <TextBlock Text="メニュー"  VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Button.Background" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Button.Foreground" Value="#FF8A80"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    

    <!--=======================================================
        ヘッダ用スタイル定義　END
        =======================================================-->

    <!--=======================================================
        メッセージボックス用スタイル定義　START
        =======================================================-->
    <!-- MessageBoxWindow -->
    <Style x:Key="MessageBoxWindow" TargetType="Window" BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="ResizeMode" Value="NoResize" />
        <!--<Setter Property="SizeToContent" Value="WidthAndHeight" />-->
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="FontSize" Value="12pt"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="Height" Value="250"/>
        <Setter Property="Title" Value=""/>
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <!--<Border CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{StaticResource PrimaryBrush}" BorderThickness="1">-->
                    <Border Background="{StaticResource WhiteBrush}" BorderBrush="{StaticResource PrimaryBrush}" BorderThickness="1" Width="400" Height="250">
                        <!--<TextBlock Text="{TemplateBinding Content}"  VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
                        <ContentPresenter></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ModalDialogWindow -->
    <Style x:Key="ModalDialogWindow" TargetType="Window" BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="1366"/>
        <Setter Property="Height" Value="768"/>
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
    </Style>
    <!--=======================================================
        メッセージボックス用スタイル定義　END
        =======================================================-->


</ResourceDictionary>