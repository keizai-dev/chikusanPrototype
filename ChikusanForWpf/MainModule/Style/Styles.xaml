<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:JaGunma.MainModule.Style"
                    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <!-- 全コントロールのデフォルトフォントサイズ -->
    <sys:Double x:Key="AllFontSize">13.667</sys:Double>
    <FontFamily x:Key="AllFontFamily">Meiryo UI</FontFamily>
    <!--<FontFamily x:Key="AllFontFamily">Yu Gothic UI</FontFamily>-->

    <!--色-->
    <SolidColorBrush x:Key="AccentBrush" Color="#FF5252" />
    <SolidColorBrush x:Key="PrimaryBrush" Color="#BDBDBD" />

    <!--UserControl(効かない_たぶんUserControlが先に描写されている)-->
    <!--<Style TargetType="DockPanel">
        <Setter Property="Background" Value="#BDBDBD"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Width" Value="1366"></Setter>
        <Setter Property="Height" Value="700"></Setter>
    </Style>-->
    
    <!-- TextBox -->
    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Style.Triggers>
            <Trigger Property="IsFocused"  Value="True">
                <!--<Setter Property="Storyboard.Name" Value="{StaticResource TextBoxAnimation}" />-->
            </Trigger>
        </Style.Triggers>
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Height" Value="30px"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#BDBDBD"></Setter>
        <Setter Property="TextBox.Effect" >
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="8" ShadowDepth="1" Opacity="0.1" Direction="270"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Height" Value="35px"/>
        <Setter Property="Width" Value="150px"/>
        <Setter Property="Background" Value="#FF5252"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2" Opacity="0.2" Direction="270"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}" >
                        <TextBlock Text="{TemplateBinding Content}"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <!--<ContentPresenter></ContentPresenter>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#FF1744"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" BlurRadius="0" ShadowDepth="0" Opacity="0" Direction="270"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <!--<DataTrigger Binding="{Binding IsStop.Value}" Value="False">
                <Setter Property="Background" Value="White" />
            </DataTrigger>-->
        </Style.Triggers>
    </Style>

    <!-- 検索Button -->
    <Style x:Key="RightDockSearchButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Width" Value="30"></Setter>
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2" Opacity="0.2" Direction="270"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="0,3,3,0" BorderThickness="1" BorderBrush="#9E9E9E">
                        <StackPanel Name="panel" Orientation="Horizontal" Background="#9E9E9E">
                            <Image Source="../Resources/SearchIcon.png" RenderOptions.BitmapScalingMode="HighQuality"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- TextBlock -->
    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <!--<DataTrigger Binding="{Binding Text,ElementName=HimmeiCodeStartTextBox}" Value="1">-->
            <DataTrigger Binding="{Binding Source=HimmeiCodeStart}" Value="1">
                <Setter Property="Text" Value="チェック！！" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- メッセージ領域 -->
    <Style x:Key="ErrorMessageRegion" TargetType="Border">
        <Setter Property="Background" Value="#FF8A80"/>
        <Style.Triggers>
            <!--<DataTrigger Binding="{Binding Text,ElementName=HimmeiCodeStartTextBox}" Value="1">-->
            <DataTrigger Binding="{Binding Text,ElementName=ErrorMessageTextBlock}" Value="">
                <Setter Property="Background" Value="#BDBDBD"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Label -->
    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <!--<Setter Property="HorizontalAlignment" Value="Center"/>-->
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
    </Style>
    
    <!-- CheckBox-->
    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource AllFontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Grid x:Name="EnableTrue" Width="20" Height="17">
                                    <Rectangle x:Name="CheckNull" Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="#FAFAFA" Stroke="#E0E0E0" StrokeThickness="1"/>
                                    <Rectangle x:Name="CheckRect" Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="White" Stroke="#FAFAFA" StrokeThickness="1"/>
                                    <Path x:Name="CheckMark" IsHitTestVisible="False" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 3 5 L 5 8 L 13 0" Stroke="#2196F3"/>
                                </Grid>
                                <Grid x:Name="EnableFalse" Width="20">
                                    <Rectangle Width="15" Height="15" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="WhiteSmoke" Stroke="#E0E0E0" StrokeThickness="1" StrokeDashArray="1,3"/>
                                </Grid>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <BulletDecorator.Child>
                            <ContentPresenter/>
                        </BulletDecorator.Child>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Visible" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Grid ItemGroupArea-->
    <Style x:Key="ItemGroupAreaGrid" TargetType="Grid">
        <Setter Property="Background" Value="White"></Setter>
    </Style>
    
    <!--Grid ItemGroupRow-->
    <Style x:Key="ItemGroupRowGrid" TargetType="Grid">
        <Setter Property="Background" Value="#E0E0E0"></Setter>
    </Style>

    <!--Grid ItemGroupRow-->
    <Style x:Key="ItemGroupAreaGroupBox" TargetType="GroupBox">
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="White"></Setter>
    </Style>

    <!---メッセージボックス-->
    <Style x:Key="MessageBoxWindow" TargetType="Window">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="FontFamily" Value="{DynamicResource AllFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource AllFontSize}"/>
    </Style>
    
    <!--=======================================================
        DataGrid用スタイル再定義 START
        ======================================================= -->
    <!-- 罫線の色 -->
    <Brush x:Key="DG_Brush_Border">#BDBDBD</Brush>
    <!-- 選択行の背景色 -->
    <Color x:Key="DG_Color_SelectedBackground">#2196F3</Color>
    <!-- マウスオーバー背景色 -->
    <Color x:Key="DG_Color_MouseOver">#dadada</Color>

    <!-- Thumb(列ヘッダ幅変更マウスカーソル) Style設定 -->
    <Style x:Key="columnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridColumnHeader(列ヘッダ) Style設定 -->
    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="SeparatorBrush" Value="LightGray" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{StaticResource AllFontSize}"/>
        <Setter Property="Background" Value="#BDBDBD"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <!-- マウスオーバで色が変わる設定 -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="columnHeaderBorder"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#fafafa" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- ヘッダ の外観 -->
                        <Border x:Name="columnHeaderBorder"
                                BorderThickness="0 0 1 1"
                                Padding="3 0 3 0"
                                BorderBrush="{StaticResource DG_Brush_Border}"
                                Background="#ffdddddd">

                            <Grid>
                                <!-- ソートマーク -->
                                <Path x:Name="sortArrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top"
                                      Width="8" Height="6" Margin="0 2 0 0"
                                      Stretch="Fill" Fill="DarkGray"
                                      RenderTransformOrigin="0.5 0.4"
                                      Visibility="Collapsed"
                                      Data="M0,0 L1,0 0.5,1 z" />
                                <!-- ヘッダ文字列 -->
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>

                        <!-- サイズ変更グリップ -->
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource columnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource columnHeaderGripperStyle}"/>
                    </Grid>

                    <!-- ソート trigger -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="sortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="sortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="sortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridCell(セル) Style設定 -->
    <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontSize" Value="{StaticResource AllFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid Style設定 -->
    <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="Background" Value="#E0E0E0"/>
        <Setter Property="BorderBrush" Value="{StaticResource DG_Brush_Border}"/>
        <Setter Property="BorderThickness" Value="1 1 1 1"/>
        <Setter Property="ColumnHeaderHeight" Value="25"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DG_Brush_Border}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DG_Brush_Border}"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Standard"/>
        <Setter Property="IsReadOnly" Value="True"></Setter>
        <!--<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>-->
    </Style>

    <!-- その他はデフォルト継承 -->
    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}"/>
    <Style TargetType="DataGridRowHeader" BasedOn="{StaticResource {x:Type DataGridRowHeader}}" />

    <!--=======================================================
        DataGrid用スタイル定義　END
        =======================================================-->
    








    <!--コントロール共通設定(上手くいかなかった)-->
    <!--<Style TargetType="Control" >
        <Setter Property="Background" Value="#BDBDBD"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Width" Value="1366"></Setter>
        <Setter Property="Height" Value="700"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="UserControl">
                    <DockPanel  Background="{TemplateBinding Background}">
                        <Grid Margin="10,0,10,10"  DockPanel.Dock="Bottom">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            --><!--メッセージ領域--><!--
                            <Label Grid.Row="0" Content="メッセージ領域" Background="#FF8A80" Foreground="White" Margin="-10,0,-10,0"/>
                            <Grid Grid.Row="1" Margin="0,10,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Content="閉じる" Margin="15,0,15,0" Background="#616161"></Button>
                                <Button Grid.Column="2"  Content="クリア" Margin="15,0,15,0" Background="White" Foreground="#2196F3"></Button>
                                <Button Grid.Column="3"  Content="新　規" Margin="15,0,15,0"></Button>
                                <Button Grid.Column="4"  Content="詳　細" Margin="15,0,15,0"></Button>
                            </Grid>
                        </Grid>

                        <ContentPresenter />

                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>